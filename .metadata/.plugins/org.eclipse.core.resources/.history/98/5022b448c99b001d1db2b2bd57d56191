package TamishraAutomation;


import java.io.IOException;
import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import TamishraAutomation.PageObjectModel.CartPage;
import TamishraAutomation.PageObjectModel.CheckOutPage;
import TamishraAutomation.PageObjectModel.ConformationPage;
import TamishraAutomation.PageObjectModel.LandingPage;
import TamishraAutomation.PageObjectModel.OrderPage;
import TamishraAutomation.PageObjectModel.ProductCatalogue;
import TamishraAutomation.TestComponents.BaseTest;
import io.github.bonigarcia.wdm.WebDriverManager;

public class SubmitOrderTest extends BaseTest {

	String Item= "ZARA COAT 3";	
		@Test(dataProvider="getData",groups="Purchase")
		public void submitOrder() throws IOException {
		
		String Cont= "India";
		
		ProductCatalogue productCatalogue=landingPage.LoginApplication("senapatitamishra1@gmail.com", "Dholu@17");
		List<WebElement> prod= productCatalogue.getProductList();
		productCatalogue.productAddToCart(Item);
		CartPage cartPage=productCatalogue.goToCart();
		Boolean match=cartPage.verifyCartProducts(Item);
		Assert.assertTrue(match);
		CheckOutPage checkOutPage= cartPage.goToCheckOut();
		checkOutPage.SelectCountry(Cont);
		ConformationPage conformationPage= checkOutPage.SubmitOrder();
		 
		String ConformMessage= conformationPage.getConformationMessage();
		Assert.assertTrue(ConformMessage.equalsIgnoreCase("Thankyou for the order."));
		
		}
		
		@Test(dependsOnMethods= {"submitOrder"})
		public void orderHistoryTest() {
			
			//Item
			ProductCatalogue productCatalogue=landingPage.LoginApplication("senapatitamishra1@gmail.com", "Dholu@17");
			OrderPage orderPage= productCatalogue.goToOrdersPage();
			Assert.assertTrue(orderPage.verifyOrderDisplayed(Item));
		}
		
		@DataProvider
		public Object[][] getData() {
			
			return new Object[][] {{"senapatitamishra1@gmail.com","Dholu@17","ZARA COAT 3"},{"senapatitamishra@gmail.com","Dholu@17","ADIDAS ORIGINAL"}};
		}
	}

